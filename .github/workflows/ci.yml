name: ci
run-name: ${{ github.head_ref || github.ref_name }}-ci

on:
    push:
        branches:
            - main
        paths-ignore:
            - "**.jpg"
            - "**.png"
            - "**.svg"
            - "**plugin.cfg"
            - "**.yml"
            - "**.md"
    workflow_dispatch:

concurrency:
    group: ci${{ github.event.number }}
    cancel-in-progress: true

jobs:
    unit-test:
        strategy:
            fail-fast: false
            matrix:
                os: ["ubuntu-22.04"]
                godot-version: ["4.2.1"]

        name: "CI Unit Test 🐧 v${{ matrix.godot-version }}"
        runs-on: ${{ matrix.os }}
        timeout-minutes: 3

        steps:
            - name: "Checkout Repository"
              uses: actions/checkout@v3
              with:
                  lfs: true
                  submodules: "recursive"

            - name: "Install Godot Mono ${{ matrix.godot-version }}"
              uses: ././github/actions/godot-install
              with:
                  godot-version: ${{ matrix.godot-version }}
                  godot-status-version: "stable"
                  godot-mono: true
                  godot-bin-name: "linux.x86_64"
                  godot-cache-path: "~/godot-linux"

            - name: "Update Ubuntu"
              if: ${{ !cancelled() }}
              shell: bash
              run: |
                  sudo apt-get update
                  sudo apt-get -y install systemd-coredump
                  sudo apt update
                  sudo apt -y install systemd-coredump

            - name: "Setup .NET"
              uses: actions/setup-dotnet@v3
              with:
                  dotnet-version: 7.0.x

            - name: "Compile C#"
              if: ${{ !cancelled() }}
              run: |
                  dotnet restore
                  dotnet build

            # We need to update the project before running tests, Godot has actually issues with loading the plugin
            - name: "Update Project"
              if: ${{ !cancelled() }}
              timeout-minutes: 1
              continue-on-error: true # we still ignore the timeout, the script is not quit and we run into a timeout
              shell: bash
              run: |
                  ${{ env.GODOT_BIN }} -e --path . -s res://addons/gdUnit4/bin/ProjectScanner.gd --headless --audio-driver Dummy

            - name: "Run Unit Tests"
              if: ${{ !cancelled() }}
              timeout-minutes: 2
              uses: ././github/actions/unit-test
              with:
                  godot-bin: ${{ env.GODOT_BIN }}
                  test-includes: "res://tests"

    #         - name: "Publish Test Report"
    #           if: ${{ always() }}
    #           uses: dorny/test-reporter@v1.6.0
    #           with:
    #               name: "test_report_${{ matrix.godot-version }}"
    #               path: "reports/**/results.xml"
    #               reporter: java-junit
    #               fail-on-error: "false"

    #         - name: "Upload Unit Test Reports"
    #           if: ${{ always() }}
    #           uses: actions/upload-artifact@v3
    #           with:
    #               name: "test_report_${{ matrix.godot-version }}"
    #               path: |
    #                   reports/**
    #                   /var/lib/systemd/coredump/**
    #                   /var/log/syslog

    # finalize:
    #     if: ${{ !cancelled() }}
    #     runs-on: ubuntu-latest
    #     name: Final Results
    #     needs: [unit-test]
    #     steps:
    #         - run: exit 1
    #           if: >-
    #               ${{
    #                   contains(needs.*.result, 'failure')
    #                 || contains(needs.*.result, 'cancelled')
    #               }}
